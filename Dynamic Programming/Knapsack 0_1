public:
    //Function to return max value that can be put in knapsack of capacity W.
    int knapSack(int W, int wt[], int val[], int n) 
    { 
         vector<int> dp(W + 1, 0);

        // Base case initialization
        for (int w = wt[0]; w <= W; ++w) {
            dp[w] = val[0];
        }

        // Filling the DP array
        for (int i = 1; i < n; ++i) {
            for (int w = W; w >= 0; --w) {
                if (wt[i] <= w) {
                    dp[w] = max(dp[w], dp[w - wt[i]] + val[i]);
                }
            }
        }

        return dp[W];
    }
