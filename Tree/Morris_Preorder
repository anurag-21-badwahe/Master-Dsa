#include <bits/stdc++.h> 
/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
vector<int> getPreOrderTraversal(TreeNode *root)
{
    vector<int>ans;
    stack<TreeNode*>st;
    TreeNode* node = root;
    if(node == NULL)return ans;
    st.push(node);
    while(!st.empty()){
        node = st.top();
        st.pop();
        ans.push_back(node->data);

        if(node->right != NULL){
            st.push(node->right);
        }  
        if(node->left != NULL){
            st.push(node->left);

        }     
    } 
    return ans;
}
