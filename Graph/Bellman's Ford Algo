public:
    vector<int> bellman_ford(int V, vector<vector<int>>& edges, int S) {
        
        vector<int>disArr(V,1e8);
        disArr[S] = 0;
        for(int i = 0; i < V-1; i++){
            for(auto edge : edges){
                int u = edge[0];
                int v = edge[1];
                int wt = edge[2];
                
                int newDis =  disArr[u] + wt;
                if(disArr[u] != 1e8 && disArr[v] > newDis){
                    disArr[v] = newDis;
                }
            }
        }
        // Nth relaxation to check wheather negative cycle in present or not
        for(auto edge : edges){
                int u = edge[0];
                int v = edge[1];
                int wt = edge[2];
                
                int newDis =  disArr[u] + wt;
                if(disArr[u] != 1e8 && disArr[v] > newDis){
                    return {-1};
                }
        }
        
        return disArr;
    }
