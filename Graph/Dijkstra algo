	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        //priority_queue<int,vector<int>,greater<int>> minHeap;
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
       
        
        //we intiliaze the distance array with max value
        vector<int> disArr(V,INT_MAX);
        disArr[S] = 0;
         pq.push({0, S}); // {dis,node}
        
        while(!pq.empty()){
            int distance = pq.top().first;
            int node = pq.top().second;
            pq.pop();
            
            for(auto it : adj[node]){
                int vertex = it[0];
                int weight = it[1];
                
                int newDis = distance + weight;
                if(newDis < disArr[vertex]){
                    disArr[vertex] = newDis;
                    
                    pq.push({newDis,vertex});
                }
            }
        }
        return disArr;
    }
