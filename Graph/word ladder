class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string>st{wordList.begin(),wordList.end()};
        queue<pair<string,int>>q;
        q.push({beginWord,1});
        st.erase(beginWord);

        while(!q.empty()){
            string word = q.front().first;
            int transformCount = q.front().second;
            q.pop();
            if(word == endWord)return transformCount;

            for(int i = 0; i < word.size();i++){
                char original = word[i]; //this is the word which i change from 'a' to 'z' 
                for(char ch = 'a'; ch <= 'z'; ch++){
                  word[i] = ch;
                  if(st.find(word) != st.end()){
                    q.push({word,transformCount+1});
                    st.erase(word);
                  }
               }
               word[i] = original;
            }

        }
        return 0;
    }
};
