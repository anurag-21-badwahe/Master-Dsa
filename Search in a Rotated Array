

int getPivot(int* arr,int n){
    int s = 0;
    int e = n-1;
    int mid = s +(e-s)/2;
    while (s<e){
        if(arr[mid]>=arr[0]){
            s = mid +1;
        }
        else{
            e = mid;
        }
       mid = s +(e-s)/2;
    }
   return s; 
}
int binarysearch(int* arr,int start,int end,int k){
    int mid = start + (end-start)/2;
    while(start<=end){
      if (arr[mid]==k){
          return mid;
      }  
      else if(k>arr[mid]){
          start = mid + 1;
      }
      else if(k<arr[mid]){
          end = mid - 1;
      }
       mid = start +(end-start)/2; 
        
    }
    return -1;
    
}
int search(int* arr, int n, int k) {

 int pivot = getPivot(arr,n);
    if(arr[pivot]<=k && k<=arr[n-1]){
        return binarysearch(arr,pivot,n-1,k);
    }
    else{
        return binarysearch(arr,0,pivot-1,k);
    }
 }
    
