class Solution {
public:
   TreeNode* construct(vector<int>& postorder,int &index, int s,int e,  unordered_map<int,int>&mpp){
    if(s > e)return nullptr;
    TreeNode* root = new TreeNode(postorder[index--]);

    int mid = mpp[root->val];
    root->right = construct(postorder,index,mid+1,e,mpp);
    root->left = construct(postorder,index,s,mid-1,mpp);

    return root;
   }
    
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        unordered_map<int,int>mpp;
        for(int i = 0; i < inorder.size(); i++){
            mpp[inorder[i]] = i;
        }

        int index = postorder.size()-1;
        return construct(postorder,index,0,index,mpp);
    }
};
